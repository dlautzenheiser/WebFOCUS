
-SET &ECHO = 'OFF'; 
-SET &RUNDATE = '&DATEYYMD.EVAL' ; 

-* testing dates
-* -SET &RUNDATE = '2023/06/09';
-* -SET &RUNDATE = '2022/12/18';
-* -SET &RUNDATE = '2022/12/01';

-SET &CURR_YEAR = EDIT('&RUNDATE.EVAL', '9999'); 
-SET &PREV_YEAR = &CURR_YEAR - 1; 
-SET &NEXT_YEAR = &CURR_YEAR + 1; 

-TYPE Running utility to dynamically set global variables for academic periods 
-TYPE Today is DATEYYMD=&DATEYYMD
-TYPE Running with RUNDATE=&RUNDATE
-TYPE PREV_YEAR=&PREV_YEAR / CURR_YEAR=&CURR_YEAR / NEXT_YEAR=&NEXT_YEAR 

-TYPE Extracting previous, current, future academic periods from Banner ODS 
DEFINE FILE ODS_GP_YEAR_TYPE_DEFINITION
RUNDATE/YYMD = '&RUNDATE.EVAL'; 
CURRENT_TERM/I1 = IF START_DATE LE '&RUNDATE.EVAL' AND END_DATE NOT LT '&RUNDATE.EVAL' THEN 1 ELSE 0; 
UPCOMING_TERM/I1 = IF START_DATE GT '&RUNDATE.EVAL' THEN 1 ELSE 0; 
PREVIOUS_TERM/I1 = IF END_DATE LE '&RUNDATE.EVAL' THEN 1 ELSE 0; 

DAYS_UNTIL_UPCOMING/I3 = IF UPCOMING_TERM IS 1 THEN DATEDIF('&RUNDATE.EVAL',START_DATE,'D') ELSE 0; 
GAP_TERM/I1 = IF UPCOMING_TERM AND DAYS_UNTIL_UPCOMING LE 30 THEN 1 ELSE 0; 
              
ACADEMIC_PERIOD_A6/A6 = ACADEMIC_PERIOD; 
ACADEMIC_PERIOD_DESC_A60/A60 = ACADEMIC_PERIOD_DESC; 
END
TABLE FILE ODS_GP_YEAR_TYPE_DEFINITION 
PRINT PREVIOUS_TERM CURRENT_TERM UPCOMING_TERM 
GAP_TERM  
DAYS_UNTIL_UPCOMING
BY ACADEMIC_PERIOD_A6 AS 'ACADEMIC_PERIOD'
BY ACADEMIC_PERIOD_DESC_A60 AS 'ACADEMIC_PERIOD_DESC'
BY YEAR_CODE_DESC BY YEAR_CODE 
BY START_DATE BY END_DATE BY RUNDATE 

WHERE YEAR_TYPE IS 'ACYR'; 
WHERE ACADEMIC_PERIOD LIKE '&PREV_YEAR.EVAL%' OR '&CURR_YEAR.EVAL%' OR '&NEXT_YEAR.EVAL%' ;
ON TABLE SET ASNAMES ON 
ON TABLE SET HOLDLIST PRINTONLY
ON TABLE HOLD AS TEMP_ACADEMIC_PERIODS FORMAT ALPHA 
END 
-RUN 
-IF &FOCERRNUM NE 0 THEN GOTO ERROR;
-IF &LINES IS 0 THEN GOTO ERROR; 

-* TABLE FILE TEMP_ACADEMIC_PERIODS 
-* PRINT * 
-* END 
-* -RUN 
-* -EXIT 


-TYPE Extracting and setting the current academic period variables
TABLE FILE TEMP_ACADEMIC_PERIODS
WHERE CURRENT_TERM; 
WRITE START_DATE END_DATE
BY ACADEMIC_PERIOD
BY ACADEMIC_PERIOD_DESC
ON TABLE SET HOLDLIST PRINTONLY 
ON TABLE HOLD AS TEMP_CURRENT_PERIOD FORMAT ALPHA 
END 
-RUN
-IF &FOCERRNUM NE 0 THEN GOTO ERROR;

-* if rundate is within a gap between courses, handle differently  
-IF &LINES IS 0 THEN GOTO PROCESS_GAP; 
-READ TEMP_CURRENT_PERIOD &CURRENT_ACADEMIC_PERIOD.A6. &CURRENT_ACADEMIC_PERIOD_DESC.A60. &CURRENT_ACADEMIC_PERIOD_START_DATE.A8. &CURRENT_ACADEMIC_PERIOD_END_DATE.A8. ; 
-GOTO SKIP_GAP


-PROCESS_GAP 
-TYPE ......................................................................................
-TYPE *NOTE* RUNDATE=&RUNDATE.EVAL is after close of last period but before opening of next 
-TYPE *NOTE* Therefore, will set CURRENT to the upcoming period
-TYPE ......................................................................................
-TYPE Extracting and setting the current academic period variables
TABLE FILE TEMP_ACADEMIC_PERIODS
WHERE GAP_TERM; 
WRITE START_DATE END_DATE
BY ACADEMIC_PERIOD
BY ACADEMIC_PERIOD_DESC
ON TABLE SET HOLDLIST PRINTONLY 
ON TABLE HOLD AS TEMP_CURRENT_PERIOD FORMAT ALPHA 
END 
-RUN
-IF &FOCERRNUM NE 0 THEN GOTO ERROR;
-IF &LINES IS 0 THEN GOTO ERROR; 
-READ TEMP_CURRENT_PERIOD &CURRENT_ACADEMIC_PERIOD.A6. &CURRENT_ACADEMIC_PERIOD_DESC.A60. &CURRENT_ACADEMIC_PERIOD_START_DATE.A8. &CURRENT_ACADEMIC_PERIOD_END_DATE.A8. ; 

-SKIP_GAP 

-* date functions 
DEFINE FUNCTION TERMDESC(YEARTERM/A6)
 YEAR/A4 = EDIT(YEARTERM, '9999');
 TERM/A2 = EDIT(YEARTERM, '$$$$99'); 
 DESC/A6 = DECODE TERM ('20' 'Spring' '30' 'Summer' '40' 'Fall' ELSE 'BAD'); 
 TERMDESC/A12 = DESC || (' ' | YEAR); 
END
DEFINE FUNCTION PREVTERM(TERM/A2)
 PREVTERM/A2 = DECODE TERM ('20' '40' '30' '20' '40' '30' ELSE '??'); 
END
DEFINE FUNCTION NEXTTERM(TERM/A2)
 NEXTTERM/A2 = DECODE TERM ('20' '30' '30' '40' '40' '20' ELSE '??'); 
END
DEFINE FUNCTION PREVYEAR(YEAR/I4, TERM/I2)
 PREVYEAR/I4 = IF TERM IS 20 THEN YEAR-1 ELSE YEAR; 
END
DEFINE FUNCTION NEXTYEAR(YEAR/I4, TERM/I2)
 NEXTYEAR/I4 = IF TERM IS 40 THEN YEAR+1 ELSE YEAR; 
END
-RUN 


-SET &CURRENT_YEAR = EDIT('&CURRENT_ACADEMIC_PERIOD.EVAL','9999');
-SET &CURRENT_TERM = EDIT('&CURRENT_ACADEMIC_PERIOD.EVAL','$$$$99'); 
-SET &CURRENT_YEARTERM = &CURRENT_YEAR || &CURRENT_TERM; 

-SET &PREVIOUS_YEAR = PREVYEAR(&CURRENT_YEAR, &CURRENT_TERM);  
-SET &PREVIOUS_TERM = PREVTERM('&CURRENT_TERM.EVAL');  
-SET &PREVIOUS_YEARTERM = &PREVIOUS_YEAR || &PREVIOUS_TERM;

-SET &PRIOR_YEAR = PREVYEAR(&PREVIOUS_YEAR,&PREVIOUS_TERM) ; 
-SET &PRIOR_TERM = PREVTERM('&PREVIOUS_TERM.EVAL');  
-SET &PRIOR_YEARTERM = &PRIOR_YEAR || &PRIOR_TERM; 

-SET &UPCOMING_YEAR = NEXTYEAR(&CURRENT_YEAR, &CURRENT_TERM); 
-SET &UPCOMING_TERM = NEXTTERM('&CURRENT_TERM.EVAL');  
-SET &UPCOMING_YEARTERM = &UPCOMING_YEAR || &UPCOMING_TERM; 

-SET &PRIOR_ACADEMIC_PERIOD = &PRIOR_YEARTERM; 
-SET &PRIOR_ACADEMIC_PERIOD_DESC = TERMDESC('&PRIOR_ACADEMIC_PERIOD.EVAL'); 
-SET &PRIOR_ACADEMIC_PERIOD_DESC_ENCLOSED='''' || '&PRIOR_ACADEMIC_PERIOD_DESC.EVAL' || ''''; 

-SET &PREVIOUS_ACADEMIC_PERIOD = &PREVIOUS_YEARTERM; 
-SET &PREVIOUS_ACADEMIC_PERIOD_DESC = TERMDESC('&PREVIOUS_ACADEMIC_PERIOD.EVAL'); 
-SET &PREVIOUS_ACADEMIC_PERIOD_DESC_ENCLOSED='''' || '&PREVIOUS_ACADEMIC_PERIOD_DESC.EVAL' || ''''; 

-SET &CURRENT_ACADEMIC_PERIOD = &CURRENT_YEARTERM; 
-SET &CURRENT_ACADEMIC_PERIOD_DESC = TERMDESC('&CURRENT_ACADEMIC_PERIOD.EVAL'); 
-SET &CURRENT_ACADEMIC_PERIOD_DESC_ENCLOSED ='''' || '&CURRENT_ACADEMIC_PERIOD_DESC.EVAL' || ''''; 

-SET &UPCOMING_ACADEMIC_PERIOD = &UPCOMING_YEARTERM; 
-SET &UPCOMING_ACADEMIC_PERIOD_DESC = TERMDESC('&UPCOMING_ACADEMIC_PERIOD.EVAL'); 
-SET &UPCOMING_ACADEMIC_PERIOD_DESC_ENCLOSED='''' || '&UPCOMING_ACADEMIC_PERIOD_DESC.EVAL' || ''''; 



-INCLUDE IBFS:/WFC/Repository/publiceq/Common/common_include_date_utility_to_calculate_year_months.fex
-SET &PREVIOUS_CALENDAR_MONTH = EDIT('&PREVIOUS_CALENDAR_YEARMONTH.EVAL','$$$$99'); 
-SET &PREVIOUS_CALENDAR_YEAR = EDIT('&PREVIOUS_CALENDAR_YEARMONTH.EVAL','9999$$'); 



-TYPE ......................................................................................
-TYPE Setting the following academic periods, where:
-TYPE ..PRIOR is the period prior to the Previous
-TYPE ..PREVIOUS is the period before the Current 
-TYPE ..CURRENT is the period that is happening now or ready to start (PREVIOUS has closed)
-TYPE ..UPCOMING is the period after the Current 
-TYPE ......................................................................................
-TYPE Global AcademicPeriod_Prior=&PRIOR_ACADEMIC_PERIOD / &PRIOR_ACADEMIC_PERIOD_DESC
-TYPE Global AcademicPeriod_Previous=&PREVIOUS_ACADEMIC_PERIOD / &PREVIOUS_ACADEMIC_PERIOD_DESC
-TYPE Global AcademicPeriod_Current=&CURRENT_ACADEMIC_PERIOD / &CURRENT_ACADEMIC_PERIOD_DESC
-TYPE Global AcademicPeriod_StartDate_Current=&CURRENT_ACADEMIC_PERIOD_START_DATE 
-TYPE Global AcademicPeriod_EndDate_Current=&CURRENT_ACADEMIC_PERIOD_END_DATE 
-TYPE Global AcademicPeriod_Desc_Upcoming=&UPCOMING_ACADEMIC_PERIOD / &UPCOMING_ACADEMIC_PERIOD_DESC
-TYPE ......................................................................................
-TYPE 
-TYPE Global CalendarYearMonth_Previous=&PREVIOUS_CALENDAR_YEARMONTH
-TYPE Global CalendarYear_Previous=&PREVIOUS_CALENDAR_YEAR
-TYPE Global CalendarMonth_Previous=&PREVIOUS_CALENDAR_MONTH
-TYPE ......................................................................................
-TYPE 

-TYPE Writing SET Academic Period Dates in BASEAPP for WFRS profile usage
 FILEDEF DATEFILE DISK baseapp/common_set_global_academic_period_dates.fex 
-RUN 

-WRITE DATEFILE -SET &|&|AcademicPeriod_Prior = &PRIOR_ACADEMIC_PERIOD ; 
-WRITE DATEFILE -SET &|&|AcademicPeriodDesc_Prior = &PRIOR_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_Desc_Prior = &PRIOR_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_Previous = &PREVIOUS_ACADEMIC_PERIOD ; 
-WRITE DATEFILE -SET &|&|AcademicPeriodDesc_Previous = &PREVIOUS_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_Desc_Previous = &PREVIOUS_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_Current = &CURRENT_ACADEMIC_PERIOD ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_StartDate_Current = &CURRENT_ACADEMIC_PERIOD_START_DATE ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_EndDate_Current = &CURRENT_ACADEMIC_PERIOD_END_DATE ; 
-WRITE DATEFILE -SET &|&|AcademicPeriodDesc_Current = &CURRENT_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_Desc_Current = &CURRENT_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_Upcoming = &UPCOMING_ACADEMIC_PERIOD ; 
-WRITE DATEFILE -SET &|&|AcademicPeriodDesc_Upcoming = &UPCOMING_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|AcademicPeriod_Desc_Upcoming = &UPCOMING_ACADEMIC_PERIOD_DESC_ENCLOSED.EVAL ; 
-WRITE DATEFILE -SET &|&|CalendarYear_Previous = &PREVIOUS_CALENDAR_YEAR ; 
-WRITE DATEFILE -SET &|&|CalendarMonth_Previous = &PREVIOUS_CALENDAR_MONTH ; 
-WRITE DATEFILE -SET &|&|CalendarYearMonth_Previous = &PREVIOUS_CALENDAR_YEARMONTH ; 


-* creating a simple report for ReportCaster 
TABLE FILE CAR 
SUM SALES NOPRINT 
HEADING
"Run Date: &RUNDATE.EVAL </1>"
"Global academic period  variable process finished without errors." 
ON TABLE SET PAGE-NUM OFF 
ON TABLE SET STYLE *
INCLUDE=IBFS:/FILE/IBI_HTML_DIR/ibi_themes/Warm.sty,$
ENDSTYLE
END
-RUN 
-GOTO END_PROC 


-ERROR
-TYPE *ERROR* An error has occurred.  
-GOTO END_PROC 


-END_PROC 






