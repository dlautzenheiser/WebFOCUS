
-DEFAULT &DATEOPTION = 'CALENDAR';
-DEFAULT &START_DATE = '01/01/2021';
-DEFAULT &END_DATE = '12/31/2021';
-DEFAULTH &TODAY_BOW = '99/99/9999';
-DEFAULTH &TODAY_EOW = '99/99/9999';
-DEFAULTH &TODAY_BOM = '99/99/9999';
-DEFAULTH &TODAY_EOM = '99/99/9999';
-DEFAULTH &TODAY_BOQ = '99/99/9999';
-DEFAULTH &TODAY_EOQ = '99/99/9999';
-DEFAULTH &LASTMONTH_BOM = '99/99/9999';
-DEFAULTH &LASTMONTH_EOM = '99/99/9999';
-DEFAULTH &LASTQTR_BOM = '99/99/9999';
-DEFAULTH &LASTQTR_EOM = '99/99/9999';
-DEFAULTH &LRD_START_DATE = '07/01/2021';
-DEFAULTH &LRD_END_DATE = '07/01/2021';

-* User can select start and end dates with calendar controls or use a pre-set date (WTD, MTD, LM, LQ, LRD=last reported date in database)

-IF &DATEOPTION NE 'CALENDAR' THEN GOTO SKIP_CALENDAR;
-TYPE START_DATE=&START_DATE
-TYPE END_DATE=&END_DATE 
-SKIP_CALENDAR 

-* date functions like DATEMOV and DATEADD need offset, not the string, so use DATECVT to make offset values 
-SET &TODAY = &MDYY; 
-SET &TODAY_OFFSET = DATECVT(&TODAY,'I8MDYY', 'MDYY');         
-TYPE TODAY=&TODAY 
-TYPE TODAY_OFFSET=&TODAY_OFFSET 


-IF &DATEOPTION NE 'WTD' THEN GOTO SKIP_WEEK;
-* using today, calculate beginning and ending of this week 
-SET &TODAY_BOW_OFFSET = DATEMOV(&TODAY_OFFSET, 'BOW'); 
-SET &TODAY_BOW = DATECVT(&TODAY_BOW_OFFSET,'MDYY','A8MDYY');     
-SET &TODAY_EOW_OFFSET = DATEMOV(&TODAY_OFFSET, 'EOW'); 
-SET &TODAY_EOW = DATECVT(&TODAY_EOW_OFFSET,'MDYY','A8MDYY');

-TYPE TODAY_BOW=&TODAY_BOW  
-TYPE TODAY_EOW=&TODAY_EOW 
-SKIP_WEEK


-IF &DATEOPTION NE 'MTD' THEN GOTO SKIP_MONTH;
-* using today, calculate beginning and ending of this month 
-SET &TODAY_BOM_OFFSET = DATEMOV(&TODAY_OFFSET, 'BOM'); 
-SET &TODAY_BOM = DATECVT(&TODAY_BOM_OFFSET,'MDYY','A8MDYY'); 
-SET &TODAY_EOM_OFFSET = DATEMOV(&TODAY_OFFSET, 'EOM'); 
-SET &TODAY_EOM = DATECVT(&TODAY_EOM_OFFSET,'MDYY','A8MDYY');     

-TYPE TODAY_BOM=&TODAY_BOM 
-TYPE TODAY_EOM=&TODAY_EOM 
-SKIP_MONTH


-IF &DATEOPTION NE 'LQ' THEN GOTO SKIP_QUARTER;
-* using today, calculate beginning and ending of this quarter 
-SET &TODAY_BOQ_OFFSET = DATEMOV(&TODAY_OFFSET, 'BOQ'); 
-SET &TODAY_BOQ = DATECVT(&TODAY_BOQ_OFFSET,'MDYY','A8MDYY');     
-SET &TODAY_EOQ_OFFSET = DATEMOV(&TODAY_OFFSET, 'EOQ'); 
-SET &TODAY_EOQ = DATECVT(&TODAY_EOQ_OFFSET,'MDYY','A8MDYY');   

-TYPE TODAY_BOQ=&TODAY_BOQ
-TYPE TODAY_EOQ=&TODAY_EOQ 
-SKIP_QUARTER


-IF &DATEOPTION NE 'LM' THEN GOTO SKIP_LASTMONTH;
-* using today, calculate last month's beginning and end of the month 
-SET &LASTMONTH_OFFSET = DATEADD(&TODAY_OFFSET, 'M', -1); 
-SET &LASTMONTH = DATECVT(&LASTMONTH_OFFSET,'MDYY','A8MDYY');   
-SET &LASTMONTH_BOM_OFFSET = DATEMOV(&LASTMONTH_OFFSET, 'BOM'); 
-SET &LASTMONTH_BOM = DATECVT(&LASTMONTH_BOM_OFFSET,'MDYY','A8MDYY'); 
-SET &LASTMONTH_EOM_OFFSET = DATEMOV(&LASTMONTH_OFFSET, 'EOM'); 
-SET &LASTMONTH_EOM = DATECVT(&LASTMONTH_EOM_OFFSET,'MDYY','A8MDYY');     

-TYPE LASTMONTH=&LASTMONTH
-TYPE LASTMONTH_BOM=&LASTMONTH_BOM 
-TYPE LASTMONTH_EOM=&LASTMONTH_EOM 
-SKIP_LASTMONTH


-IF &DATEOPTION NE 'LQ' THEN GOTO SKIP_LASTQTR;
-* using today, calculate the last quarter and then the beginning and ending dates 
-SET &LASTQTRMONTH = DECODE &DATEM (01 10 02 10 03 10 
-                                   04 01 05 01 06 01 
-                                   07 04 08 04 09 04 
-                                   10 07 11 07 12 07 ELSE 99); 
-SET &LASTQTRYEAR = IF &DATEM LT 04 THEN &DATEYY-1 ELSE &DATEYY; 
-SET &LASTQTRDAY = 01; 

-SET &LASTQTR_BOM = &LASTQTRMONTH||&LASTQTRDAY||&LASTQTRYEAR; 
-SET &LASTQTR_BOM_OFFSET = DATECVT(&LASTQTR_BOM,'I8MDYY', 'MDYY');         
-SET &LASTQTR_EOM_OFFSET = DATEMOV(&LASTQTR_BOM_OFFSET, 'EOQ'); 
-SET &LASTQTR_EOM = DATECVT(&LASTQTR_EOM_OFFSET,'MDYY','A8MDYY');

-TYPE LASTQTR_BOM=&LASTQTR_BOM 
-TYPE LASTQTR_EOM=&LASTQTR_EOM 
-SKIP_LASTQTR 



-IF &DATEOPTION NE 'LRD' THEN GOTO SKIP_LRD;
-* need to do LRD 
-SET &LRD_START_DATE = '01/01/1999';
-SET &LRD_END_DATE = '01/01/1999';


ENGINE SQLMSS SET DEFAULT_CONNECTION CPSSSAS
SQL SQLMSS PREPARE SQLOUT FOR
SELECT
    MAX(MaxDateOfBusiness) AS StartDate
  , MAX(MaxDateOfBusiness) AS EndDate
FROM database.dbo.tablename
END
DEFINE FILE SQLOUT
LASTDATE/MDYY = IF EndDate IS MISSING THEN 01011999 ELSE EndDate; 
ILASTDATE/I8MDYY = LASTDATE;
STARTDATE/A8 = EDIT(ILASTDATE);
ENDDATE/A8 = STARTDATE; 
END
TABLE FILE SQLOUT
PRINT STARTDATE ENDDATE 
ON TABLE HOLD AS LASTRPTDATE FORMAT ALPHA 
END
-RUN
-IF &FOCERRNUM NE 0 THEN GOTO SKIP_LRD;
-IF &LINES IS 0 THEN GOTO SKIP_LRD; 

-READ LASTRPTDATE &LRD_START_DATE.A8. &LRD_END_DATE.A8. 
-TYPE LRD_START_DATE=&LRD_START_DATE 
-TYPE LRD_END_DATE=&LRD_END_DATE 

-SKIP_LRD 




-SET &START_DATE = IF &DATEOPTION IS 'CALENDAR' THEN &START_DATE ELSE  
-                 IF &DATEOPTION IS 'WTD' THEN EDIT(&TODAY_BOW,'99/99/9999') ELSE 
-                 IF &DATEOPTION IS 'MTD' THEN EDIT(&TODAY_BOM,'99/99/9999') ELSE 
-                 IF &DATEOPTION IS 'LM' THEN EDIT(&LASTMONTH_BOM,'99/99/9999') ELSE 
-                 IF &DATEOPTION IS 'LQ' THEN EDIT(&LASTQTR_BOM,'99/99/9999') ELSE 
-                 IF &DATEOPTION IS 'LRD' THEN EDIT(&LRD_START_DATE,'99/99/9999') ELSE '01/01/1999'; 

-SET &END_DATE = IF &DATEOPTION IS 'CALENDAR' THEN &END_DATE ELSE  
-                 IF &DATEOPTION IS 'WTD' THEN EDIT(&TODAY_EOW,'99/99/9999') ELSE 
-                 IF &DATEOPTION IS 'MTD' THEN EDIT(&TODAY_EOM,'99/99/9999') ELSE 
-                 IF &DATEOPTION IS 'LM' THEN EDIT(&LASTMONTH_EOM,'99/99/9999') ELSE 
-                 IF &DATEOPTION IS 'LQ' THEN EDIT(&LASTQTR_EOM,'99/99/9999') ELSE
-                 IF &DATEOPTION IS 'LRD' THEN EDIT(&LRD_START_DATE,'99/99/9999') ELSE '01/01/1999'; 

-SET &STARTDATE = &START_DATE ; 
-SET &ENDDATE = &END_DATE ; 

-TYPE Using DATEOPTION=&DATEOPTION 
-TYPE Reset START_DATE=&START_DATE
-TYPE Reset END_DATE=&END_DATE 

